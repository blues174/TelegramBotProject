import telegram
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
from telegram.constants import ParseMode
import aiohttp
import json
import os
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN="7846747880:AAHg1aRxkPrJAD0g0I-DcZ5wZogvVfzw2Nk"
OPENWEATHER_API_KEY="d596221b0fdd36984e64fdb65640210b"

async def get_weather_openweather(city_name: str) -> str:
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city_name}&appid={OPENWEATHER_API_KEY}&units=metric&lang=ru"
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                response.raise_for_status()
                data = await response.json()
                if data and data.get("weather") and data.get("main"):
                    weather = data["weather"][0]
                    main = data["main"]
                    condition = weather.get("description")
                    temp = main.get("temp")
                    feels_like = main.get("feels_like")
                    wind_speed = data.get("wind", {}).get("speed")
                    humidity = main.get("humidity")
                    return f"""
<b>–ü–æ–≥–æ–¥–∞ –æ—Ç OpenWeatherMap:</b>
üèô–ì–æ—Ä–æ–¥: {city_name}
‚òÅ–°–æ—Å—Ç–æ—è–Ω–∏–µ: {condition}
‚ùÑ–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞
üåß–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C
üå¨–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å
üí¶–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%
                    """
                elif data and data.get("message"):
                    return f"‚ùå –û—à–∏–±–∫–∞: {data['message']}"
                else:
                    return "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç OpenWeatherMap"
    except aiohttp.ClientError as e:
        return f"‚ö† –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [KeyboardButton("–°—Ç–∞—Ä—Ç üöÄ"), KeyboardButton("–ü–æ–≥–æ–¥–∞ ‚òÄÔ∏è")],
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "üëã–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–≥–æ–¥–∞ ‚òÄÔ∏è, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ.",
        reply_markup=reply_markup
    )


async def openweather_weather(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("üåç –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
    context.user_data['waiting_for_city'] = True


async def get_city_name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if context.user_data.get('waiting_for_city'):
        city_name = update.message.text
        weather_info = await get_weather_openweather(city_name)
        await update.message.reply_text(weather_info, parse_mode=ParseMode.HTML)
        context.user_data['waiting_for_city'] = False
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ –ü–æ–≥–æ–¥–∞ ‚òÄÔ∏è.")


async def error(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    print(f"Update {update} caused error {context.error}")

async def handle_start_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    context.user_data['waiting_for_city'] = False
    await start(update, context)

async def handle_weather_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await openweather_weather(update, context)

def main() -> None:
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("^–°—Ç–∞—Ä—Ç üöÄ$"), handle_start_button))
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("^–ü–æ–≥–æ–¥–∞ ‚òÄÔ∏è$"), handle_weather_button))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, get_city_name))
    application.add_error_handler(error)

    application.run_polling()


if __name__ == "__main__":
    main()
